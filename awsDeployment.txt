### security group setup
ssh            0.0.0.0 //0.  (ipV4 && ipV6)
http           0.0.0.0 //0.     20
https          0.0.0.0 //0.     200
custom tcp     0.0.0.0 //0.    8080 
all tcp        0.0.0.0 //0.     1-12000

### store secerate key 
.pem for ubuntu
.pek for putty

### swith to super user
sudo su

### setup mongodb in aws
1. sudo apt-get install gnupg curl

2. curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | \
   sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg \
   --dearmor

3. echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list

4. sudo apt-get update   ### load updated pakages

5. sudo apt-get install -y mongodb-org

6. echo "mongodb-org hold" | sudo dpkg --set-selections
echo "mongodb-org-database hold" | sudo dpkg --set-selections
echo "mongodb-org-server hold" | sudo dpkg --set-selections
echo "mongodb-mongosh hold" | sudo dpkg --set-selections
echo "mongodb-org-mongos hold" | sudo dpkg --set-selections
echo "mongodb-org-tools hold" | sudo dpkg --set-selections

7. sudo systemctl start mongod

8. sudo systemctl daemon-reload

9. sudo systemctl status mongod

10. sudo systemctl enable mongod

11. sudo systemctl stop mongod

12. sudo systemctl restart mongod

13. mongosh   --- exit()

### Connect to mongodb Atlas to make database globally accessible (monoshell setup - copy connection string)

1. sudo vim /etc/mongod.conf
2. modify pid : 0.0.0.0
3. sudo service mongod restart

### reload updated pakages

1. sudo apt-get update

### clone repository to ubuntu shell

1.  git clone 'https://github.com/ramesh000002/flask-deployment.git'

### Setup virtual environment in linux based system (ubuntu)

1. sudo apt-get install python3-venv
2. sudo apt-get install python3-pip
3. python3 -m venv venv
4. source venv\Scripts\Activate

### install required libraries in virtual environment

1. pip install -r requirements.txt

### run application

1. python3 application.py    (modify connection string monogodb)

### if required (modify in flask)

1. sudo nano application.py (like modify in connection string if not done)
2. cat application.py      ### verify changes

### deploymeent

1. pip install gunicorn

2. gunicorn -b 0.0.0.0:8000 application:application

3. sudo nano /etc/systemd/system/flaskapp.service   ### (change path according current path)

*///
[Unit]
Description=Gunicorn instance for a simple flask app
After=network.target
[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/flask-deployment
ExecStart=/home/ubuntu/flask-deployment/venv/bin/gunicorn -b localhost:8000 application:application
Restart=always
[Install]
WantedBy=multi-user.target
///*

4. sudo systemctl daemon-reload

5 sudo systemctl start flaskapp

6. sudo systemctl enable flaskapp

7. curl localhost:8000

8. sudo apt-get intall nginx

9. sudo systemctl start nginx

10. sudo systemctl enable nginx

11. sudo nano /etc/nginx/sites-available/default

upstream flaskapp {
    server 127.0.0.1:8000;
}

location / {
    proxy_pass http://flaskapp;
}

12. sudo systemctl restart nginxx
